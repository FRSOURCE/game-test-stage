import{d as i,a as o,G as l,e as c,f as a,g as w,D as u,V as r,h as y}from"./index-CGVOwrdP.js";const g=({scene:e})=>{e.clearColor=new i(.53,.81,.98),e.ambientColor=new o(.05,.15,.24),e.imageProcessingConfiguration.exposure=.75,e.environmentIntensity=.75;const t=new l("glow",e);t.intensity=.7;const s=c.CreateFromPrefilteredData("/textures/sky_env.env",e),n=e.createDefaultSkybox(s,!0,500,0,!0);return e.environmentTexture=s,{skyboxMesh:n}},m=async({scene:e})=>{a.BaseAssetsUrl="",w.BaseAssetsUrl="/game-test-stage/".slice(0,-1)??"",(await a.CreateAsync("snow",e,!1)).start()},S=({scene:e})=>{const t=new u("dir01",new r(-1,-2,-1),e);t.diffuse=new o(1,.9,.8),t.position=new r(20,40,20),t.intensity=7,t.shadowMinZ=20,t.shadowMaxZ=80;const s=new y(1024,t);return s.usePercentageCloserFiltering=!0,s.cascadeBlendPercentage=.1,s.bias=.01,{shadowLight:t,shadowGenerator:s}};export{m as a,S as b,g as s};
