import{$ as o,a0 as u,y as l,C as n,Y as c,Z as d}from"./page-B1C7C4gn.js";const h=({scene:r})=>{const i={width:200,height:200,subdivisions:500,minHeight:0,maxHeight:16,updatable:!1},s=o("texturedGround","maps/Snow/heightMapLowRes.webp",i,r),{material:e}=u({scene:r},{name:"groundMaterial",dir:"/textures/snow",uScale:4,vScale:4}),t=new l(`${"/game-test-stage/".slice(0,-1)}/maps/Snow/groundOpacityMask.webp`,r);t.hasAlpha=!0,e.opacityTexture=t,e.emissiveColor=new n(.9,.9,.9),e.emissiveIntensity=.07,e.roughness=.95,e.subSurface.tintColor=new n(.9,.96,.96),e.subSurface.isRefractionEnabled=!0,e.subSurface.refractionIntensity=.2,e.subSurface.indexOfRefraction=2.1,s.material=e,s.receiveShadows=!0,s.renderingGroupId=0;const a=o("physicsGround","maps/Snow/heightMapLowRes_physics.webp",{...i,subdivisions:100,onReady:()=>new c(a,d.MESH,{mass:0},r)},r);return a.isVisible=!1,s.checkCollisions=!1,s.isPickable=!1,a.checkCollisions=!0,a.isPickable=!1,s.freezeNormals(),a.freezeNormals(),s.freezeWorldMatrix(),a.freezeWorldMatrix(),{ground:s,physicsGround:a}};export{h as s};
